// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // method-1
    DMux(in=in, sel=sel[1], a=dmuxab, b=dmuxcd);
    DMux(in=dmuxab, sel=sel[0], a=a, b=b);
    DMux(in=dmuxcd, sel=sel[0], a=c, b=d);

    /*
       // method-2
    Not(in=sel[0], out=nSel0);
    Not(in=sel[1], out=nSel1);

    // a = in.sel[0]^.sel[1]^
    And(a=nSel0, b=nSel1, out=seln1n2);
    And(a=in,b=seln1n2,out=a);

    // b= in.sel[0].sel[1]^
    And(a=sel[0], b=nSel1, out=seln12);
    And(a=in, b=seln12, out=b);

    // c= in.sel[0]^.sel[1]
    And(a=nSel0, b=sel[1], out=sel1n2);
    And(a=in,b=sel1n2,out=c);

    // d= in.sel[0].sel[1]
    And(a=sel[0],b=sel[1],out=sel12);
    And(a=in,b=sel12,out=d);
    */
 

}